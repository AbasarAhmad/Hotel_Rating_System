package com.saar.userservice.service.impl;

import java.util.List;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.saar.userservice.entity.User;
import com.saar.userservice.exception.ResourceNotFoundException;
import com.saar.userservice.repositories.UserRepository;
import com.saar.userservice.service.UserService;

@Service
public class UserServiceImpl implements UserService{

	@Autowired
	private UserRepository userRepository;
	
	@Override
	public User createUser(User user) {
		String randomUserId=UUID.randomUUID().toString(); // Here we are creating a Random and Unique user Id 
		user.setUserId(randomUserId);               // Here setting the random User Id
		return userRepository.save(user);
	}

	@Override
	public User updateUser(String userId, User user) {
		User newUser=userRepository.findById(userId).orElseThrow(()->new ResourceNotFoundException("User with given id is not  found on server : "+userId));
		return userRepository.save(newUser);
	}

	@Override
	public String deleteUser(String userId) {
		User newUser=userRepository.findById(userId).orElseThrow(()->new ResourceNotFoundException("User with given id is not  found on server : "+userId));
		 userRepository.delete(newUser);
		 return "User is deleted by id : "+userId;
	}

	@Override
	public User getUser(String userId) {
		User user=userRepository.findById(userId).orElseThrow(()->new ResourceNotFoundException("User with given id is not  found on server : "+userId));
		return user;
	}

	@Override
	public List<User> getAllUser() {
			return userRepository.findAll();
	}

}
